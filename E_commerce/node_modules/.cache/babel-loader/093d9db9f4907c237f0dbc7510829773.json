{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport cartReducer from \"./cartRedux\";\nimport userReducer from \"./userSlice\";\nimport wishlistReducer from \"./wishlistSlice\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  wishlist: wishlistReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(store);","map":{"version":3,"sources":["/Users/dan/Coding/E-commerce/src/redux/store.js"],"names":["configureStore","combineReducers","cartReducer","userReducer","wishlistReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","persistConfig","key","version","rootReducer","user","cart","wishlist","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"mappings":"AAAA,SACEA,cADF,EAEEC,eAFF,QAGO,kBAHP;AAIA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,iBAA5B;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAUA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBC,EAAAA,OAAO,EAAE,CAFW;AAGpBH,EAAAA;AAHoB,CAAtB;AAMA,MAAMI,WAAW,GAAGhB,eAAe,CAAC;AAClCiB,EAAAA,IAAI,EAAEf,WAD4B;AAElCgB,EAAAA,IAAI,EAAEjB,WAF4B;AAGlCkB,EAAAA,QAAQ,EAAEhB;AAHwB,CAAD,CAAnC;AAMA,MAAMiB,gBAAgB,GAAGf,cAAc,CAACQ,aAAD,EAAgBG,WAAhB,CAAvC;AAGA,OAAO,MAAMK,KAAK,GAAGtB,cAAc,CAAC;AAClCuB,EAAAA,OAAO,EAAEF,gBADyB;AAElCG,EAAAA,UAAU,EAAGC,oBAAD,IACVA,oBAAoB,CAAC;AACnBC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,cAAc,EAAE,CAACpB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADA,GAAD;AAHY,CAAD,CAA5B;AAUP,OAAO,IAAIgB,SAAS,GAAGvB,YAAY,CAACiB,KAAD,CAA5B","sourcesContent":["import {\n  configureStore,\n  combineReducers\n} from \"@reduxjs/toolkit\";\nimport cartReducer from \"./cartRedux\";\nimport userReducer from \"./userSlice\";\nimport wishlistReducer from \"./wishlistSlice\"\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage,\n};\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  wishlist: wishlistReducer\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport let persistor = persistStore(store);"]},"metadata":{},"sourceType":"module"}