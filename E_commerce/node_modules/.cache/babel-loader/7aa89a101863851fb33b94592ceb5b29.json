{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    currentUser: null,\n    isFetching: false,\n    error: false,\n    userLastSavedCart: null\n  },\n  reducers: {\n    loginStart: state => {\n      state.isFetching = true;\n    },\n    loginSuccess: (state, action) => {\n      state.isFetching = false;\n      state.currentUser = action.payload;\n      state.error = false;\n    },\n    loginFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    logOut: state => {\n      state.isFetching = false;\n      state.error = false;\n      state.currentUser = null;\n    },\n    registerStart: state => {\n      state.isFetching = true;\n    },\n    registerSuccess: (state, action) => {\n      state.isFetching = false;\n      state.currentUser = action.payload;\n      state.error = false;\n    },\n    registerFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  logOut,\n  registerStart,\n  registerSuccess,\n  registerFailure\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["/Users/dan/Coding/E-commerce_API/E_commerce/src/redux/userSlice.js"],"names":["createSlice","userSlice","name","initialState","currentUser","isFetching","error","userLastSavedCart","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","logOut","registerStart","registerSuccess","registerFailure","actions","reducer"],"mappings":"AAAA,SACIA,WADJ,QAEO,kBAFP;AAIA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,WAAW,EAAE,IADH;AAEVC,IAAAA,UAAU,EAAE,KAFF;AAGVC,IAAAA,KAAK,EAAE,KAHG;AAIVC,IAAAA,iBAAiB,EAAE;AAJT,GAFY;AAQ1BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,EAAGC,KAAD,IAAW;AACnBA,MAAAA,KAAK,CAACL,UAAN,GAAmB,IAAnB;AACH,KAHK;AAINM,IAAAA,YAAY,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC7BF,MAAAA,KAAK,CAACL,UAAN,GAAmB,KAAnB;AACAK,MAAAA,KAAK,CAACN,WAAN,GAAoBQ,MAAM,CAACC,OAA3B;AACAH,MAAAA,KAAK,CAACJ,KAAN,GAAc,KAAd;AACH,KARK;AASNQ,IAAAA,YAAY,EAAGJ,KAAD,IAAW;AACrBA,MAAAA,KAAK,CAACL,UAAN,GAAmB,KAAnB;AACAK,MAAAA,KAAK,CAACJ,KAAN,GAAc,IAAd;AACH,KAZK;AAaNS,IAAAA,MAAM,EAAGL,KAAD,IAAW;AACfA,MAAAA,KAAK,CAACL,UAAN,GAAmB,KAAnB;AACAK,MAAAA,KAAK,CAACJ,KAAN,GAAc,KAAd;AACAI,MAAAA,KAAK,CAACN,WAAN,GAAoB,IAApB;AACH,KAjBK;AAkBNY,IAAAA,aAAa,EAAGN,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACL,UAAN,GAAmB,IAAnB;AACH,KApBK;AAqBNY,IAAAA,eAAe,EAAE,CAACP,KAAD,EAAQE,MAAR,KAAmB;AAChCF,MAAAA,KAAK,CAACL,UAAN,GAAmB,KAAnB;AACAK,MAAAA,KAAK,CAACN,WAAN,GAAoBQ,MAAM,CAACC,OAA3B;AACAH,MAAAA,KAAK,CAACJ,KAAN,GAAc,KAAd;AACH,KAzBK;AA0BNY,IAAAA,eAAe,EAAGR,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACL,UAAN,GAAmB,KAAnB;AACAK,MAAAA,KAAK,CAACJ,KAAN,GAAc,IAAd;AACH;AA7BK;AARgB,CAAD,CAA7B;AAyCA,OAAO,MAAM;AACTG,EAAAA,UADS;AAETE,EAAAA,YAFS;AAGTG,EAAAA,YAHS;AAITC,EAAAA,MAJS;AAKTC,EAAAA,aALS;AAMTC,EAAAA,eANS;AAOTC,EAAAA;AAPS,IAQTjB,SAAS,CAACkB,OARP;AAUP,eAAelB,SAAS,CAACmB,OAAzB","sourcesContent":["import {\n    createSlice\n} from \"@reduxjs/toolkit\";\n\nconst userSlice = createSlice({\n    name: \"user\",\n    initialState: {\n        currentUser: null,\n        isFetching: false,\n        error: false,\n        userLastSavedCart: null,\n    },\n    reducers: {\n        loginStart: (state) => {\n            state.isFetching = true;\n        },\n        loginSuccess: (state, action) => {\n            state.isFetching = false;\n            state.currentUser = action.payload;\n            state.error = false;\n        },\n        loginFailure: (state) => {\n            state.isFetching = false;\n            state.error = true;\n        },\n        logOut: (state) => {\n            state.isFetching = false;\n            state.error = false;\n            state.currentUser = null;\n        },\n        registerStart: (state) => {\n            state.isFetching = true;\n        },\n        registerSuccess: (state, action) => {\n            state.isFetching = false;\n            state.currentUser = action.payload;\n            state.error = false;\n        },\n        registerFailure: (state) => {\n            state.isFetching = false;\n            state.error = true;\n        }\n    },\n});\n\nexport const {\n    loginStart,\n    loginSuccess,\n    loginFailure,\n    logOut,\n    registerStart,\n    registerSuccess,\n    registerFailure\n} = userSlice.actions;\n\nexport default userSlice.reducer;"]},"metadata":{},"sourceType":"module"}