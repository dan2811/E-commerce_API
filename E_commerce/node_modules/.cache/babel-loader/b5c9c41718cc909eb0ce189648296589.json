{"ast":null,"code":"import { useDispatch as dispatch } from \"react-redux\";\nimport { publicRequest } from \"../requestMethods\";\nimport { loginFailure, loginStart, loginSuccess, registerStart, registerSuccess, registerFailure } from \"./userSlice\";\nimport \"./cartRedux.js\";\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n\n  try {\n    const res = await publicRequest.post(\"auth/login\", user);\n    dispatch(loginSuccess(res.data));\n  } catch (err) {\n    dispatch(loginFailure());\n  }\n};\nexport const register = async (dispatch, user) => {\n  dispatch(registerStart());\n\n  try {\n    const res = await publicRequest.post(\"auth/register\", user);\n    dispatch(registerSuccess(res.data));\n  } catch (err) {\n    dispatch(registerFailure());\n  }\n};\nexport const newCart = async (dispatch, cart) => {\n  dispatch(newCartStart());\n\n  try {\n    const res = await publicRequest.post(\"carts/\", cart);\n    dispatch(newCartSuccess(res.data));\n  } catch (err) {\n    dispatch(newCartFailure());\n  }\n};","map":{"version":3,"sources":["/Users/dan/Coding/E-commerce/src/redux/apiCalls.js"],"names":["useDispatch","dispatch","publicRequest","loginFailure","loginStart","loginSuccess","registerStart","registerSuccess","registerFailure","login","user","res","post","data","err","register","newCart","cart","newCartStart","newCartSuccess","newCartFailure"],"mappings":"AAAA,SACIA,WAAW,IAAIC,QADnB,QAEO,aAFP;AAGA,SACIC,aADJ,QAEO,mBAFP;AAGA,SACIC,YADJ,EAEIC,UAFJ,EAGIC,YAHJ,EAIIC,aAJJ,EAKIC,eALJ,EAMIC,eANJ,QAOO,aAPP;AAQA,OAEO,gBAFP;AAKA,OAAO,MAAMC,KAAK,GAAG,OAAOR,QAAP,EAAiBS,IAAjB,KAA0B;AAC3CT,EAAAA,QAAQ,CAACG,UAAU,EAAX,CAAR;;AACA,MAAI;AACA,UAAMO,GAAG,GAAG,MAAMT,aAAa,CAACU,IAAd,CAAmB,YAAnB,EAAiCF,IAAjC,CAAlB;AACAT,IAAAA,QAAQ,CAACI,YAAY,CAACM,GAAG,CAACE,IAAL,CAAb,CAAR;AACH,GAHD,CAGE,OAAOC,GAAP,EAAY;AACVb,IAAAA,QAAQ,CAACE,YAAY,EAAb,CAAR;AACH;AACJ,CARM;AAUP,OAAO,MAAMY,QAAQ,GAAG,OAAOd,QAAP,EAAiBS,IAAjB,KAA0B;AAC9CT,EAAAA,QAAQ,CAACK,aAAa,EAAd,CAAR;;AACA,MAAI;AACA,UAAMK,GAAG,GAAG,MAAMT,aAAa,CAACU,IAAd,CAAmB,eAAnB,EAAoCF,IAApC,CAAlB;AACAT,IAAAA,QAAQ,CAACM,eAAe,CAACI,GAAG,CAACE,IAAL,CAAhB,CAAR;AACH,GAHD,CAGE,OAAOC,GAAP,EAAY;AACVb,IAAAA,QAAQ,CAACO,eAAe,EAAhB,CAAR;AACH;AACJ,CARM;AAUP,OAAO,MAAMQ,OAAO,GAAG,OAAOf,QAAP,EAAiBgB,IAAjB,KAA0B;AAC7ChB,EAAAA,QAAQ,CAACiB,YAAY,EAAb,CAAR;;AACA,MAAI;AACA,UAAMP,GAAG,GAAG,MAAMT,aAAa,CAACU,IAAd,CAAmB,QAAnB,EAA6BK,IAA7B,CAAlB;AACAhB,IAAAA,QAAQ,CAACkB,cAAc,CAACR,GAAG,CAACE,IAAL,CAAf,CAAR;AACH,GAHD,CAGE,OAAOC,GAAP,EAAY;AACVb,IAAAA,QAAQ,CAACmB,cAAc,EAAf,CAAR;AACH;AACJ,CARM","sourcesContent":["import {\n    useDispatch as dispatch\n} from \"react-redux\";\nimport {\n    publicRequest\n} from \"../requestMethods\";\nimport {\n    loginFailure,\n    loginStart,\n    loginSuccess,\n    registerStart,\n    registerSuccess,\n    registerFailure\n} from \"./userSlice\";\nimport {\n\n} from \"./cartRedux.js\";\n\n\nexport const login = async (dispatch, user) => {\n    dispatch(loginStart());\n    try {\n        const res = await publicRequest.post(\"auth/login\", user);\n        dispatch(loginSuccess(res.data));\n    } catch (err) {\n        dispatch(loginFailure());\n    }\n};\n\nexport const register = async (dispatch, user) => {\n    dispatch(registerStart());\n    try {\n        const res = await publicRequest.post(\"auth/register\", user);\n        dispatch(registerSuccess(res.data));\n    } catch (err) {\n        dispatch(registerFailure());\n    }\n};\n\nexport const newCart = async (dispatch, cart) => {\n    dispatch(newCartStart());\n    try {\n        const res = await publicRequest.post(\"carts/\", cart);\n        dispatch(newCartSuccess(res.data));\n    } catch (err) {\n        dispatch(newCartFailure());\n    }\n}"]},"metadata":{},"sourceType":"module"}