{"ast":null,"code":"import{configureStore,combineReducers}from\"@reduxjs/toolkit\";import cartReducer from\"./cartRedux\";import userReducer from\"./userSlice\";import wishlistReducer from\"./wishlistSlice\";import{persistStore,persistReducer,FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER}from'redux-persist';import storage from'redux-persist/lib/storage';var persistConfig={key:'root',version:1,storage:storage};var rootReducer=combineReducers({user:userReducer,cart:cartReducer,wishlist:wishlistReducer});var persistedReducer=persistReducer(persistConfig,rootReducer);export var store=configureStore({reducer:persistedReducer,middleware:function middleware(getDefaultMiddleware){return getDefaultMiddleware({serializableCheck:{ignoredActions:[FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER]}});}});export var persistor=persistStore(store);","map":{"version":3,"sources":["/Users/dan/Coding/E-commerce_API/E_commerce/src/redux/store.js"],"names":["configureStore","combineReducers","cartReducer","userReducer","wishlistReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","persistConfig","key","version","rootReducer","user","cart","wishlist","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"mappings":"AAAA,OACEA,cADF,CAEEC,eAFF,KAGO,kBAHP,CAIA,MAAOC,CAAAA,WAAP,KAAwB,aAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,aAAxB,CACA,MAAOC,CAAAA,eAAP,KAA4B,iBAA5B,CACA,OACEC,YADF,CAEEC,cAFF,CAGEC,KAHF,CAIEC,SAJF,CAKEC,KALF,CAMEC,OANF,CAOEC,KAPF,CAQEC,QARF,KASO,eATP,CAUA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CAEA,GAAMC,CAAAA,aAAa,CAAG,CACpBC,GAAG,CAAE,MADe,CAEpBC,OAAO,CAAE,CAFW,CAGpBH,OAAO,CAAPA,OAHoB,CAAtB,CAMA,GAAMI,CAAAA,WAAW,CAAGhB,eAAe,CAAC,CAClCiB,IAAI,CAAEf,WAD4B,CAElCgB,IAAI,CAAEjB,WAF4B,CAGlCkB,QAAQ,CAAEhB,eAHwB,CAAD,CAAnC,CAMA,GAAMiB,CAAAA,gBAAgB,CAAGf,cAAc,CAACQ,aAAD,CAAgBG,WAAhB,CAAvC,CAGA,MAAO,IAAMK,CAAAA,KAAK,CAAGtB,cAAc,CAAC,CAClCuB,OAAO,CAAEF,gBADyB,CAElCG,UAAU,CAAE,oBAACC,oBAAD,QACVA,CAAAA,oBAAoB,CAAC,CACnBC,iBAAiB,CAAE,CACjBC,cAAc,CAAE,CAACpB,KAAD,CAAQC,SAAR,CAAmBC,KAAnB,CAA0BC,OAA1B,CAAmCC,KAAnC,CAA0CC,QAA1C,CADC,CADA,CAAD,CADV,EAFsB,CAAD,CAA5B,CAUP,MAAO,IAAIgB,CAAAA,SAAS,CAAGvB,YAAY,CAACiB,KAAD,CAA5B","sourcesContent":["import {\n  configureStore,\n  combineReducers\n} from \"@reduxjs/toolkit\";\nimport cartReducer from \"./cartRedux\";\nimport userReducer from \"./userSlice\";\nimport wishlistReducer from \"./wishlistSlice\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage,\n};\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  wishlist: wishlistReducer\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport let persistor = persistStore(store);"]},"metadata":{},"sourceType":"module"}